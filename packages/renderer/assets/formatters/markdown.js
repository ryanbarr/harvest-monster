import { formatPrice } from "../../utils/formatPrice";
import { parsePrice } from "../../utils/parsePrice";

export default {
  key: "markdown",
  name: "Markdown",
  prefix: ({
    currentLeagueName,
    customNotes,
    exchangeRate,
    includeExchangeRate,
    willingToStream,
  }) => {
    let post = "```md\n";

    post += `WTS ${currentLeagueName}`;

    post += ` | [generated by](HarvestMonster)\n`;

    post += `==============================\n`;

    // Custom Notes
    if (customNotes.trim() !== "") {
      post += `/* ${customNotes} */\n`;
    }

    // Exchange Rate
    if (includeExchangeRate) {
      post += `[Exchange Rate: ](${exchangeRate}c to 1ex)\n`;
    }

    // Willing to Stream
    if (willingToStream) {
      post += `> Can stream if requested\n`;
    }

    post += `\n`;

    return post;
  },
  craft: (craft, { maxCraftLength, fallback }) => {
    let post = "";
    const fb = fallback ? "83" : "";
    const quantityLengthAdjustment = `${craft.quantity}`.length - 1;
    let bufferLength =
      maxCraftLength - craft.name.length + 3 - quantityLengthAdjustment;
    let name = craft.name;

    if (craft.quantity === 0) {
      name = "-" + craft.name.replace(/\s/g, "-") + "-";
      bufferLength = bufferLength - 2;
    }

    const buffer = Array.from(Array(bufferLength), () => "").join(" ");

    post += `${craft.quantity}x | ${name}${buffer} [${
      craft.level > 0 ? craft.level : fb
    }] <${formatPrice(parsePrice(craft.displayPrice))}>`;

    post += "\n";

    return post;
  },
  suffix: () => "```",
};
